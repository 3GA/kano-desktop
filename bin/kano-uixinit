#!/bin/bash

# kano-uixinit
#
# Copyright (C) 2014 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU General Public License v2
#
#  This script is a wrapper on top of LXDE autoinit.
#
#  It starts kano-settings if needed and sets the background wallpaper
#  It fits well on bootup and logoff-logon transitions.
#

. /usr/share/kano-toolset/logging.sh

first_boot_file="$HOME/.kano-settings/first_boot"
after_update_file="$HOME/.kano-settings/after_update"
mkdir -p "$HOME/.kano-settings"

#prevent gtk apps from warning about lack of accessibility bridge
export NO_AT_BRIDGE=1

function is_installed
{
    if [ -n "`which $1`" ]; then
        return 0
    else
        return 1
    fi
}

function set_keyboard
{
    # Load Kano Keyboard configuration file for Hotkeys, or a generic one for regular keyboards
    keyboard_conf_dir="/usr/share/kano-desktop/config/keyboard"
    if [ "$1" = "True" ]; then
        keyboard_conf="$keyboard_conf_dir/kanokeyboardrc"
    else
        keyboard_conf="$keyboard_conf_dir/generickeyboardrc"
    fi
    logger_info "Launching xbindkeys with configuration: $keyboard_conf"
    /usr/bin/xbindkeys -f $keyboard_conf

    # Set user keyboard layout
    logger_info "Setting the keyboard layout for the user"
    sudo /usr/bin/kano-settings-cli set keyboard --load
}

############ STARTS HERE ############

# Track some information about the hardware used
kano-tracker-ctl generate hw-info

# Start the tracking daemon
kano-tracker-ctl refresh --watch &

# Disable XServer screen saver time and screen blanking (The display would become black)
if is_installed xset; then
    logger_info "Disabling the screensaver"
    xset s off
    xset -dpms
    xset s noblank
fi

# detect kano-keyboard
kano_keyboard=`python -c "from kano.utils import detect_kano_keyboard; print detect_kano_keyboard()"`

# Load init configuration options
INIT_CONF=/boot/init.conf
SKIP="false"
FLOW="normal"
if [ -e $INIT_CONF ]; then
    do_skip=`json-get $INIT_CONF kano_init_flow.skip`
    rv=$?
    if [ "$rv" -eq 0 ] && [ "$do_skip" == "True" ]; then
        SKIP="true"
    fi

    flow_type=`json-get $INIT_CONF kano_init_flow.flow`
    rv=$?
    if [ "$rv" -eq 0 ] && [ -n "$flow_type" ]; then
        FLOW="$flow_type"
    fi
fi
FIRST_BOOT="false"
# The following block is related to the first bootflow
if [ ! -f $first_boot_file ]; then
    FIRST_BOOT="true"
    if [ "$SKIP" != "true" ]; then
        # This is backwards compatibility with version prior to Beta 1.3.1
        if [ ! -f $after_update_file ]; then
            # Keyboard tutorial
            if [ "$kano_keyboard" == "True" ]; then
                kano-tutorial
            fi
            # load background
            /usr/bin/kdesk -w &
            # Launch init flow
            logger_info "Launching kano-init-flow"
            sudo kano-init-flow
            logger_info "kano-init-flow completed"
        else
            # load background
            /usr/bin/kdesk -w &
            # Remove temp file
            rm $after_update_file
        fi
        # Login / Create account
        if [ "$FLOW" != "workshops" ]; then
            kano-login --register
        fi
        # Video
        logger_info "Playing os_intro.mp4"
        kano-video-cli /usr/share/kano-media/videos/os_intro.mp4

        #Â Show the background selector from settings
        sudo kano-settings 14
    fi

    # regenerating ssh keys
    if [ `getent group kanousers | wc -l` -eq 1 ]; then
        sudo regenerate-ssh-keys &
    fi

    # Finalise account setup
    sudo kano-init finalise
    sudo kano-updater first-boot

    touch $first_boot_file
else
    # The following is executed in subsequent boots

    # start hourglass to wait for the last X11 app to get ready
    kdesk-hourglass-app "lxpanel"

    # load background
    /usr/bin/kdesk -w &
fi

# loads and sets the keyboard layout
set_keyboard $kano_keyboard

# startmouse
logger_info "Launching startmouse"
/usr/bin/startmouse &

# lxpanel
logger_info "Launching LXPanel"

/usr/bin/lxpanel --profile LXDE &

# LXPanel resets the volume level to 100, we need it to be restored to
# whatever level it was before shutdown or reboot
if [ -e /etc/init.d/alsa-utils ]; then
    # Redirect both stderr and stdout to null, we can do our own logging
    /etc/init.d/alsa-utils start &> /dev/null
    if [ "$FIRST_BOOT" == "true" ]; then
        amixer -c 0 -- sset PCM playback 90%
    fi
    ret_val="$?"
    if [ "$ret_val" -ne 0 ]; then
        logger_warn "Failed to restore volume level, ret code: $ret_val"
    else
        logger_info "Audio volume level was successfully restored"
    fi
else
    logger_warn "alsa-utils not found, can't attempt to restore volume level"
fi
# start mount trigger
logger_info "Launching kano-mount-trigger"
/usr/bin/kano-mount-trigger "/usr/bin/kano-launcher /usr/bin/pcmanfm pcmanfm" &

# starting kdesk
logger_info "Launching kdesk"
/usr/bin/kdesk &
/usr/bin/kano-feedback-widget &


# Report a startup event to Kano Tracker
kano-tracker-ctl +1 startup

# TODO: This should be in a drop in directory,
# installed from the updater instead
sudo kano-updater ui boot-window

if [ is_internet ]; then
    # Try uploading the tracking data to our servers
    # Should be quiet on failure
    kano-sync --upload-tracking-data --silent
fi


# Remove Homedir "Desktop" folder created by:
# /usr/share/xsessions/lightdm-xsession.desktop
rm -rf  ~/Desktop

# starting kano-vnc
startvnc=/usr/share/kano-vnc/startvnc
if [ -e $startvnc ]; then
    logger_info "Launching startvnc"
    $startvnc
fi
