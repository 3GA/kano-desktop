#!/usr/bin/env python
#
# Copyright (C) 2016 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU GPL v2
#
# This script starts and controls that a single instance of Make Adventures is running.
#
# If another instance of Chromium is running, it is killed, and Adventures starts.
# If Adventures is running it maximizes and focus grabbed, then returns silently.
# Otherwise the app is launched, in maximized state.
#
# This script is meant to be started from the desktop icon,
# so it needs to run as fast as possible. It also takes care of tracking.
#

import os
import sys

adventures_window_name='Kano Adventures'
chromium_window_name='Chromium-browser'

adventures_cmdline="kano-tracker-ctl session run " \
    "kano-adventures 'x-www-browser --start-maximized http://adventures.kano.me/'"


def get_window_name(window_name):
    '''
    Returns Window ID if window_name is found on the desktop.
    '''
    try:
        window_id=os.popen('xdotool search --name "{}"'.format(window_name)).read()
        if window_id and len(window_id):
            return window_id.strip()
    except:
        pass

    return None


def maximize_window(window_name):
    '''
    Maximizes and gives focus to the window_name.
    '''
    os.system('wmctrl -r "{}" -b add,maximized_vert,maximized_horz'.format(window_name))
    os.system('wmctrl -a "{}"'.format(window_name))


if __name__ == '__main__':

    # Is Make adventures already running? Bring to the front and quit asap.
    winid=get_window_name(adventures_window_name)
    if winid:
        maximize_window(adventures_window_name)
        sys.exit(0)

    # Is an unrelated Chromium running? Kill it and start Make Adventures.
    if get_window_name(chromium_window_name):
        os.system('pkill -f chromium-browser')

    rc=os.system(adventures_cmdline)
    sys.exit(rc)
